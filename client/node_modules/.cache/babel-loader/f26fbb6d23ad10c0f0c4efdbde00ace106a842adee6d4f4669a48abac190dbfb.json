{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Documents\\\\cse110_Lab4\\\\client\\\\src\\\\context\\\\AppContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\n\n// Define the shape of the context data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Initial state with default budget value\nconst initialState = {\n  expenses: [],\n  setExpenses: () => {},\n  budget: 2000,\n  setBudget: () => {}\n};\n\n// Create the context\nexport const AppContext = /*#__PURE__*/createContext(initialState);\n\n// Provider component to wrap the application\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [expenses, setExpenses] = useState(initialState.expenses);\n  const [budget, setBudget] = useState(initialState.budget);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      expenses,\n      setExpenses,\n      budget,\n      setBudget\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"GUhsHVOu0anotQu6LDqOIWI+NyM=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","initialState","expenses","setExpenses","budget","setBudget","AppContext","AppProvider","children","_s","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aryan/Documents/cse110_Lab4/client/src/context/AppContext.tsx"],"sourcesContent":["import { createContext, useState, ReactNode } from \"react\";\r\nimport { Expense } from \"../types/types\";\r\n\r\n// Define the shape of the context data\r\ninterface AppContextType {\r\n  expenses: Expense[];\r\n  setExpenses: React.Dispatch<React.SetStateAction<Expense[]>>;\r\n  budget: number;\r\n  setBudget: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\n// Initial state with default budget value\r\nconst initialState: AppContextType = {\r\n  expenses: [],\r\n  setExpenses: () => {},\r\n  budget: 2000,\r\n  setBudget: () => {},\r\n};\r\n\r\n// Create the context\r\nexport const AppContext = createContext<AppContextType>(initialState);\r\n\r\n// Provider component to wrap the application\r\nexport const AppProvider = ({ children }: { children: ReactNode }) => {\r\n  const [expenses, setExpenses] = useState<Expense[]>(initialState.expenses);\r\n  const [budget, setBudget] = useState<number>(initialState.budget);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        expenses,\r\n        setExpenses,\r\n        budget,\r\n        setBudget,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAmB,OAAO;;AAG1D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA;AACA,MAAMC,YAA4B,GAAG;EACnCC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;EACrBC,MAAM,EAAE,IAAI;EACZC,SAAS,EAAEA,CAAA,KAAM,CAAC;AACpB,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,gBAAGT,aAAa,CAAiBI,YAAY,CAAC;;AAErE;AACA,OAAO,MAAMM,WAAW,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACP,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAYG,YAAY,CAACC,QAAQ,CAAC;EAC1E,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAASG,YAAY,CAACG,MAAM,CAAC;EAEjE,oBACEJ,OAAA,CAACM,UAAU,CAACI,QAAQ;IAClBC,KAAK,EAAE;MACLT,QAAQ;MACRC,WAAW;MACXC,MAAM;MACNC;IACF,CAAE;IAAAG,QAAA,EAEDA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACN,EAAA,CAhBWF,WAAW;AAAAS,EAAA,GAAXT,WAAW;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}